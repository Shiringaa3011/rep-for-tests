name: Check dynamic approvals (N-1)

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  pull_request_review:
    types: [submitted, dismissed, edited]

jobs:
  approvals:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
      contents: read

    steps:
      - name: Install gh (GitHub CLI)
        uses: cli/cli-action@v2
        with:
          version: 'latest'

      - name: Compute required approvals and check current approvals
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
          PR_NUMBER: ${{ github.event.pull_request.number || github.event.number }}
        run: |
          set -euo pipefail
          echo "Repo: $REPO  PR: $PR_NUMBER"

          # Получаем логин автора PR
          PR_AUTHOR=$(gh api repos/$REPO/pulls/$PR_NUMBER --jq '.user.login')
          echo "PR author: $PR_AUTHOR"

          # Получаем список уникальных участников команды (N)
          # Попытаемся определить контекст: если репозиторий в организации — считаем org members,
          # иначе считаем collaborators репозитория.
          OWNER="${REPO%/*}"
          IS_ORG=$(gh api orgs/$OWNER --jq '.login' 2>/dev/null || echo "")

          if [ -n "$IS_ORG" ]; then
            echo "Repository owner $OWNER is an organization. Counting org members..."
            # считаем активных участников организации
            TOTAL_MEMBERS=$(gh api orgs/$OWNER/members --jq 'length') || TOTAL_MEMBERS=0
          else
            echo "Repository owner $OWNER is a user. Counting repository collaborators..."
            TOTAL_MEMBERS=$(gh api repos/$REPO/collaborators --jq 'length') || TOTAL_MEMBERS=0
          fi

          if [ "$TOTAL_MEMBERS" -le 1 ]; then
            echo "Warning: найдено $TOTAL_MEMBERS участника(ов). Невозможно применить правило N-1. Пропускаем проверку."
            exit 0
          fi

          REQUIRED=$((TOTAL_MEMBERS - 1))
          echo "Total members (N) = $TOTAL_MEMBERS, required approvals = $REQUIRED"

          # Считаем уникальные апруверы (не автор)
          APPROVERS=$(gh api repos/$REPO/pulls/$PR_NUMBER/reviews --jq '[.[] | select(.state=="APPROVED") | .user.login] | unique')
          echo "Approvers raw: $APPROVERS"
          # Количество апруверов, исключая автора
          APPROVALS_COUNT=$(echo "$APPROVERS" | jq '[.[] | select(. != "'"$PR_AUTHOR"'")] | length' )
          echo "Approvals (excluding author): $APPROVALS_COUNT"

          if [ "$APPROVALS_COUNT" -lt "$REQUIRED" ]; then
            echo "❌ Недостаточно апрувов: $APPROVALS_COUNT / $REQUIRED"
            # Выведем список апруверов для удобства
            echo "Апруверы (исключая автора):"
            echo "$APPROVERS" | jq '.'
            exit 1
          fi

          echo "✅ Достаточно апрувов: $APPROVALS_COUNT / $REQUIRED"
